
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$blog-app-primary: mat.define-palette(mat.$indigo-palette);
$blog-app-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$blog-app-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$blog-app-theme: mat.define-light-theme((
  color: (
    primary: $blog-app-primary,
    accent: $blog-app-accent,
    warn: $blog-app-warn,
  ),
  typography: mat.define-typography-config(),
  density: 0
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($blog-app-theme);

// ----------------------------------------------------------------
// ----------------------------------------------------------------
//
// There are all usually classes and arrays
//
// ----------------------------------------------------------------
// ----------------------------------------------------------------

@import url('https://fonts.googleapis.com/css2?family=Montserrat:ital@1&family=PT+Sans&family=Roboto:wght@400;500&display=swap');

$colors: (
  // Standars colors  (c means color)
  c_black: #000000,
  c_white: #ffffff,
  c_red: #f00,
  c_blue: #00f,

  // with opacity
  c_black_with_opacity: #000000d9,
  c_white_with_opacity: #ffffffd9,

  c_navigation: #fafafa,
  c_navigation_with_opacity: #fafafa9e,

);
$fonts_size: (
  tiny: 12px,
  small: 16px,
  normal: 20px,
  big: 24px,
  header-small: 24px,
  header-normal: 28px,
);

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  color: map-get($colors, c_black);
}

body {
  font-family: 'Roboto', sans-serif;
  font-weight: 400;
  font-size: map-get($fonts_size, normal);
}
h1, h2, h3, h4, h5, h6 {
  font-size: map-get($fonts-size, header-normal);
  font-family: 'Montserrat', sans-serif;
}
a{
  text-decoration: none;
  cursor: pointer;
}
ul, ol, li {
  list-style-type: none;
}

@media screen and (max-width: 600px) {
  body {
    font-size: map-get($fonts_size, small);
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: map-get($fonts-size, header-small);
  }
}
